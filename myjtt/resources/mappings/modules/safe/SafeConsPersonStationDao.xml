<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.modules.safe.dao.SafeConsPersonStationDao">
    
	<sql id="safeConsPersonStationColumns">
		a.id AS "id",
		a.project_name AS "proSimpleInfo.id",
		a.contract_section_type AS "contractSectionType",
		a.contract_section_label AS "contractSectionLabel",
		a.construction_name AS "constructionName",
		a.resident_sources AS "residentSources",
		a.resident_type AS "residentType",
		a.resident_site AS "residentSite",
		a.team_name AS "teamName",
		a.live_num AS "liveNum",
		a.fire_equipment AS "fireEquipment",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		p.project_simple_name AS "proSimpleInfo.projectSimpleName"
	</sql>
	
	<sql id="safeConsPersonStationJoins">
		LEFT JOIN pro_simple_info p ON p.id = a.project_name
		LEFT JOIN sys_user u ON u.id = a.create_by
		LEFT JOIN sys_office o ON u.office_id = o.id
	</sql>
    
	<select id="get" resultType="SafeConsPersonStation">
		SELECT 
			<include refid="safeConsPersonStationColumns"/>
		FROM safe_cons_person_station a
		<include refid="safeConsPersonStationJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SafeConsPersonStation">
		SELECT 
			<include refid="safeConsPersonStationColumns"/>
		FROM safe_cons_person_station a
		<include refid="safeConsPersonStationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="proSimpleInfo != null">
				<if test="proSimpleInfo.id != null and proSimpleInfo.id != ''">
					AND a.project_name = #{proSimpleInfo.id }
				</if>
			</if>
			<if test="contractSectionLabel != null and contractSectionLabel != ''">
				AND a.contract_section_label = #{contractSectionLabel}
			</if>
		</where>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SafeConsPersonStation">
		SELECT 
			<include refid="safeConsPersonStationColumns"/>
		FROM safe_cons_person_station a
		<include refid="safeConsPersonStationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findContractLabel" resultType="java.lang.String">
		SELECT DISTINCT a.contract_section_label 
		FROM safe_cons_person_station a
		WHERE a.project_name = #{projectId }
	</select>
	
	<insert id="insert">
		INSERT INTO safe_cons_person_station(
			id,
			project_name,
			contract_section_type,
			contract_section_label,
			construction_name,
			resident_sources,
			resident_type,
			resident_site,
			team_name,
			live_num,
			fire_equipment,
			create_date,
			create_by,
			update_date,
			update_by,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{proSimpleInfo.id},
			#{contractSectionType},
			#{contractSectionLabel},
			#{constructionName},
			#{residentSources},
			#{residentType},
			#{residentSite},
			#{teamName},
			#{liveNum},
			#{fireEquipment},
			#{createDate},
			#{createBy.id},
			#{updateDate},
			#{updateBy.id},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE safe_cons_person_station SET 	
			project_name = #{proSimpleInfo.id},
			contract_section_type = #{contractSectionType},
			contract_section_label = #{contractSectionLabel},
			construction_name = #{constructionName},
			resident_sources = #{residentSources},
			resident_type = #{residentType},
			resident_site = #{residentSite},
			team_name = #{teamName},
			live_num = #{liveNum},
			fire_equipment = #{fireEquipment},
			update_date = #{updateDate},
			update_by = #{updateBy.id},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE safe_cons_person_station SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>